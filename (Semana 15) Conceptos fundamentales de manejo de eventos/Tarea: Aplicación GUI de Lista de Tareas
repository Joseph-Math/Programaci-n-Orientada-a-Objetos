import tkinter as tk
from tkinter import messagebox

class TaskManagerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Gestor de Tareas")
        
        # Frame para la entrada de tareas
        self.frame = tk.Frame(self.root)
        self.frame.pack(pady=10)

        # Campo de entrada para nuevas tareas
        self.task_entry = tk.Entry(self.frame, width=30)
        self.task_entry.pack(side=tk.LEFT)

        # Botón para añadir tarea
        self.add_button = tk.Button(self.frame, text="Añadir Tarea", command=self.add_task)
        self.add_button.pack(side=tk.LEFT)

        # Botón para marcar como completada
        self.complete_button = tk.Button(self.frame, text="Marcar como Completada", command=self.complete_task)
        self.complete_button.pack(side=tk.LEFT)

        # Botón para eliminar tarea
        self.delete_button = tk.Button(self.frame, text="Eliminar Tarea", command=self.delete_task)
        self.delete_button.pack(side=tk.LEFT)

        # Listbox para mostrar las tareas
        self.task_listbox = tk.Listbox(self.root, width=50, height=10)
        self.task_listbox.pack(pady=10)

        # Bind para añadir tarea con Enter
        self.task_entry.bind("<Return>", lambda event: self.add_task())

    def add_task(self):
        task = self.task_entry.get()
        if task:
            self.task_listbox.insert(tk.END, task)
            self.task_entry.delete(0, tk.END)  # Limpiar la entrada
        else:
            messagebox.showwarning("Advertencia", "Por favor, escribe una tarea.")

    def complete_task(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            task = self.task_listbox.get(selected_index)
            # Marcar como completada (puedes modificar el estilo visual aquí)
            self.task_listbox.delete(selected_index)
            self.task_listbox.insert(selected_index, f"{task} (completada)")
            self.task_listbox.itemconfig(selected_index, {'fg': 'gray'})  # Cambiar color
        except IndexError:
            messagebox.showwarning("Advertencia", "Por favor, selecciona una tarea.")

    def delete_task(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            self.task_listbox.delete(selected_index)
        except IndexError:
            messagebox.showwarning("Advertencia", "Por favor, selecciona una tarea.")

if __name__ == "__main__":
    root = tk.Tk()
    app = TaskManagerApp(root)
    root.mainloop()

